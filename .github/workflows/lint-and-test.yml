name: Lint and Test

on:
  push:
    branches:
      - '**'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - ""
          - "wasm"
          - "python"
          - "elgamal3"
          - "legacy-pep-repo-compatible"
    name: cargo clippy
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo clippy --all-targets --features "${{ matrix.features }}" -- -D warnings

  fmt:
    runs-on: ubuntu-latest
    name: cargo fmt
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo fmt -- --check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - ""
          - "elgamal3"
          - "legacy-pep-repo-compatible"
          - "elgamal3,legacy-pep-repo-compatible"
    name: cargo test
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test --features "${{ matrix.features }}"
      - run: cargo doc --no-deps --features "${{ matrix.features }}"

  test-python:
    runs-on: ubuntu-latest
    name: test python bindings
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Install dependencies and build Python extension
        run: |
          source .venv/bin/activate
          pip install maturin pytest
          maturin develop --features python
      - name: Run Python tests
        run: |
          source .venv/bin/activate
          python -m unittest discover tests/python/ -v

  test-wasm:
    runs-on: ubuntu-latest
    name: test wasm bindings
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: cargo install wasm-pack
      - run: npm install
      - name: Build WASM package
        run: npm run build
      - name: Run WASM tests
        run: npm test
